{"version":3,"sources":["polyfill.ts","serviceWorker.ts","constants/LaunchesConstants.ts","constants/BaseConstants.ts","state/actions/LaunchesActions/getLaunchesAction.ts","constants/ApiConstants.ts","api/calls/LaunchesCalls/getLaunchesCall.ts","state/middlewares/sagas/LaunchesSaga/actions/getLaunchesSaga.ts","state/middlewares/sagas/LaunchesSaga/watchers/getLaunchesWatcher.ts","state/selectors/LaunchesSelectors/getYearSelector.ts","state/actions/LaunchesActions/setYearAction.ts","state/middlewares/sagas/LaunchesSaga/actions/setYearSaga.ts","state/middlewares/sagas/LaunchesSaga/watchers/setYearWatcher.ts","state/middlewares/sagas/LaunchesSaga/index.ts","state/store/composeEnhancers.ts","constants/ThemeConstants.ts","state/reducers/LaunchesReducer.ts","constants/StoreConstants.ts","constants/StoreConfigConstants.ts","state/reducers/index.ts","state/store/createReducer.ts","state/store/index.ts","components/containers/GlobalStyle/index.tsx","components/layout/atoms/SelectContainer/index.ts","components/layout/atoms/FiltersContainer/index.ts","components/layout/atoms/Icon/index.ts","components/layout/atoms/SelectWrapper/index.ts","components/layout/atoms/Span/index.ts","components/layout/atoms/Button/index.ts","components/layout/molecules/SelectedYear/index.tsx","state/selectors/LaunchesSelectors/isLoadingSelector.ts","components/layout/molecules/FilterButton/index.tsx","components/layout/molecules/Select/index.tsx","hooks/useOutsideClick.ts","components/layout/atoms/SelectItem/index.ts","state/selectors/LaunchesSelectors/isSelectedYearSelector.ts","components/layout/molecules/SelectItemYear/index.tsx","components/layout/organisms/SelectYear/index.tsx","helpers/arrayOfLength.ts","state/selectors/LaunchesSelectors/getOrderSelector.ts","state/selectors/LaunchesSelectors/isAscendingOrderSelector.ts","components/layout/molecules/SelectedOrder/index.tsx","components/layout/molecules/SortButton/index.tsx","state/actions/LaunchesActions/toggleOrderAction.ts","components/layout/organisms/Filters/index.tsx","components/layout/atoms/Img/index.ts","components/layout/atoms/LogoContainer/index.ts","components/layout/atoms/HeaderContainer/index.ts","components/layout/molecules/Logo/index.tsx","components/layout/molecules/ReloadButton/index.tsx","components/layout/organisms/Header/index.tsx","components/layout/atoms/LaunchBackground/index.ts","components/layout/molecules/HomeLaunchBackground/index.tsx","helpers/getImageSrcSetInfo.ts","components/layout/atoms/HomeListWrapper/index.ts","components/layout/atoms/H5/index.ts","components/layout/atoms/H3/index.ts","components/layout/atoms/H4/index.ts","components/layout/atoms/Card/index.ts","components/layout/atoms/LaunchCard/index.ts","components/layout/atoms/Rank/index.ts","components/layout/atoms/Section/index.ts","helpers/getOrdinalNumber.ts","helpers/getShortMonth.ts","components/layout/molecules/Launch/index.tsx","helpers/formatLaunchDate.ts","components/layout/atoms/Shimmer/index.ts","components/layout/molecules/LaunchSkeleton/index.tsx","components/layout/atoms/ListWrapper/index.ts","state/selectors/LaunchesSelectors/getFilteredItemsSelector.ts","state/selectors/LaunchesSelectors/getItemsSelector.ts","state/selectors/LaunchesSelectors/getLaunchItemSelector.ts","state/selectors/LaunchesSelectors/getRowHeightSelector.ts","hooks/useListRowHeight.ts","components/layout/organisms/LaunchesList/index.tsx","hooks/useLaunchesList.ts","state/actions/LaunchesActions/setRowHeightAction.ts","components/layout/templates/HomeList/index.tsx","components/layout/pages/Home/index.tsx","App.tsx","index.tsx"],"names":["global","Intl","areIntlLocalesSupported","NumberFormat","IntlPolyfill","DateTimeFormat","Boolean","window","location","hostname","match","ROW_HEIGHT","SUCCESS","getLaunchesAction","payload","success","error","items","type","GET_LAUNCHES","HOST","VERSION","LAUNCHES_ENDPOINT","getLaunchesCall","params","endpoint","join","axios","get","then","data","catch","getLaunchesSaga","call","put","getLaunchesWatcher","takeLatest","getYearSelector","state","year","setYearAction","transformedYear","isNaN","Number","String","submitLoginSaga","select","currentYear","all","setYearWatcher","setYearSaga","LaunchesSaga","fork","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","black","Color","dark","white","blue","getColor","color","opacity","darken","fade","string","mediaQueries","phone","min","max","largePhone","tabletPortrait","tabletLandscape","ThemeConstants","colors","primary","fontFamilies","sizes","base","initialState","order","isLoading","rowHeight","LaunchesTransform","createTransform","inboundState","outboundState","whitelist","LaunchesReducer","action","Config","version","key","debug","process","storage","transforms","createReducer","asyncReducers","persistReducer","combineReducers","rootReducers","combinedSaga","sagaMiddleware","createSagaMiddleware","store","createStore","undefined","composeEnhancers","applyMiddleware","persistor","persistStore","getState","injectReducer","asyncReducer","replaceReducer","persist","asyncSagas","injectSaga","asyncSaga","combinedSagas","run","configureStore","GlobalStyle","createGlobalStyle","theme","SelectContainer","styled","ul","visible","css","FiltersContainer","div","spinAnimation","keyframes","Icon","i","spin","icon","SelectWrapper","Span","span","hideSm","showSm","Button","button","rounded","animated","SelectedYear","useSelector","isLoadingSelector","FilterButton","onClick","buttonRef","disabled","ref","dangerouslySetInnerHTML","__html","Select","trigger","item","options","onSelectOption","TriggerComponent","useMemo","ItemComponent","useState","isOpen","setIsOpen","useRef","handler","useEffect","clickListener","event","current","contains","target","keyClickListener","document","addEventListener","removeEventListener","useOutsideClick","data-testid","map","option","index","optionKey","SelectItem","li","selected","createCachedSelector","_","selectedYear","SelectItemYear","label","isSelectedYear","isSelectedYearSelector","length","Date","getFullYear","Object","keys","Array","from","e","SelectYear","dispatch","useDispatch","setYear","useCallback","getOrderSelector","createSelector","SelectedOrder","isAsc","isAscendingOrderSelector","SortButton","toggleOrder","Filters","Img","img","LogoContainer","HeaderContainer","header","Logo","src","ReloadButton","getLaunches","Header","LaunchBackground","HomeLaunchBackground","imagePath","imageExt","set","srcSetInfo","srcSet","HomeListWrapper","H5","h5","H3","h3","H4","h4","Card","LaunchCard","Rank","Section","side","suffixes","one","two","few","other","getOrdinalNumber","number","forceFallback","suffix","PluralRules","fixedTh","includes","lastNumber","ordinalRules","dateRules","month","getShortMonth","date","format","Launch","flightNumber","missionName","rocketName","title","unixDate","stringifiedTimestamp","Error","formatUnixTimestamp","day","getDate","dateArray","formatLaunchDate","shimmer","Shimmer","LaunchSkeleton","SectionSkeleton","RankShimmer","TitleShimmer","DateShimmer","RocketShimmer","ListWrapper","filteredItems","filter","launch_year","sort","a","b","launch_date_unix","getFilteredItemsSelector","getRowHeightSelector","LARGE","TINY","RowRenderer","props","launch","getLaunchItemSelector","flight_number","style","height","width","mission_name","rocket","rocket_name","LaunchesList","launches","scroll","top","left","behavior","useLaunchesList","setRowHeight","setRowHeightAction","onWidowResize","windowWidth","currentTarget","innerWidth","dispatchEvent","Event","useListRowHeight","isScrolling","registerChild","onChildScroll","scrollTop","autoHeight","onScroll","rowCount","rowRenderer","HomeList","Home","App","loading","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.53749004.chunk.js","sourcesContent":["import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\n\nimport IntlPolyfill from 'intl';\nimport areIntlLocalesSupported from 'intl-locales-supported';\n\nconst localesMyAppSupports: string[] = ['en'];\n\nif (global.Intl) {\n    if (!areIntlLocalesSupported(localesMyAppSupports)) {\n        Intl.NumberFormat = IntlPolyfill.NumberFormat;\n        Intl.DateTimeFormat = IntlPolyfill.DateTimeFormat;\n    }\n} else global.Intl = IntlPolyfill;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const GET_LAUNCHES: string = 'GET_LAUNCHES';\nexport const TOGGLE_ORDER: string = 'TOGGLE_ORDER';\nexport const SET_YEAR: string = 'SET_YEAR';\nexport const SET_ROW_HEIGHT: string = 'SET_ROW_HEIGHT';\n\nexport const FIRST_AVAILABLE_YEAR: number = 2006;\n\ninterface RowHeight {\n    TINY: number;\n    LARGE: number;\n    MARGIN: number;\n}\n\nexport const ROW_HEIGHT: RowHeight = {\n    TINY: 4,\n    LARGE: 5,\n    MARGIN: 0.3125,\n};\n","export const SUCCESS: string = '_SUCCESS';\nexport const FAILURE: string = '_FAILURE';\n","import { FAILURE, SUCCESS } from '../../../constants/BaseConstants';\n\nimport { GET_LAUNCHES } from '../../../constants/LaunchesConstants';\n\ninterface Payload {\n    success?: boolean;\n    error?: Error;\n    items?: Launch[];\n}\n\n/**\n * Redux action, without any payload it allows to be intercepted by saga middleware and to send\n * request to the API for getting launches\n * It's used in saga middleware too:\n * If success param is truthy the action allows to store the state of launches using the items param\n * Else, if error is truthy, it means that something's gone wrong in saga middleware\n *\n * @export\n * @param {(GetLaunchesActionArgs | null)} [payload=null]\n * @returns {GetLaunchesActionType}\n */\nexport default function getLaunchesAction(\n    payload: GetLaunchesActionArgs | null = null\n): GetLaunchesActionType {\n    if (payload) {\n        const { success, error, items }: Payload = payload;\n        if (success) {\n            return {\n                type: GET_LAUNCHES + SUCCESS,\n                items: items ? items : [],\n            };\n        } else if (error) {\n            return {\n                type: GET_LAUNCHES + FAILURE,\n                error,\n            };\n        }\n    }\n    return {\n        type: GET_LAUNCHES,\n    };\n}\n","export const HOST: string = 'https://api.spacexdata.com';\nexport const VERSION: string = 'v3';\n\nexport const LAUNCHES_ENDPOINT: string = 'launches';\n","import {\n    HOST,\n    LAUNCHES_ENDPOINT,\n    VERSION,\n} from '../../../constants/ApiConstants';\nimport axios, { AxiosPromise } from 'axios';\n\nexport default function getLaunchesCall(\n    params: GetLaunchesParams = {}\n): AxiosPromise {\n    const endpoint = [HOST, VERSION, LAUNCHES_ENDPOINT].join('/');\n    return axios\n        .get(endpoint, { params })\n        .then(({ data }) => data)\n        .catch((error) => {\n            throw error;\n        });\n}\n","import { call, put } from 'redux-saga/effects';\n\nimport getLaunchesAction from '../../../../actions/LaunchesActions/getLaunchesAction';\nimport getLaunchesCall from './../../../../../api/calls/LaunchesCalls/getLaunchesCall';\n// import { call, put, select } from 'redux-saga/effects';\n\n// import getOrderSelector from '../../../../selectors/LaunchesSelectors/getOrderSelector';\n// import getYearSelector from '../../../../selectors/LaunchesSelectors/getYearSelector';\n\nexport default function* getLaunchesSaga() {\n    // const year = yield select(getYearSelector);\n    // const order = yield select(getOrderSelector);\n    let params: GetLaunchesParams = {};\n    // params = { order };\n    // if (year) {\n    //     params.sort = 'launch_date_utc';\n    //     params.launch_year = year;\n    // }\n    const items = yield call(getLaunchesCall, params);\n    yield put(\n        getLaunchesAction({\n            success: true,\n            items,\n        })\n    );\n}\n","import { GET_LAUNCHES } from '../../../../../constants/LaunchesConstants';\nimport getLaunchesSaga from '../actions/getLaunchesSaga';\nimport { takeLatest } from 'redux-saga/effects';\n\nexport default function* getLaunchesWatcher() {\n    yield takeLatest(GET_LAUNCHES as any, getLaunchesSaga);\n}\n","import { LAUNCHES_REDUCER_NAME } from '../../../constants/StoreConstants';\nimport { Store } from '../../../../models/state/store';\n\nexport default function getYearSelector(state: Store): string {\n    return state[LAUNCHES_REDUCER_NAME].year;\n}\n","import {\n    FIRST_AVAILABLE_YEAR,\n    SET_YEAR,\n} from '../../../constants/LaunchesConstants';\n\nimport { SUCCESS } from '../../../constants/BaseConstants';\n\n/**\n * Action that allows to store the selected year info\n * Data is stored just if the success param is truthy\n * This approach could be used in safa middlware to perform a request to the api\n * (i.e. you could performa a request if you want to filter launches request on server side)\n *\n * @export\n * @param {SetYearActionArgs} {\n *     year,\n *     success,\n * }\n * @returns {SetYearActionType}\n */\nexport default function setYearAction({\n    year,\n    success,\n}: SetYearActionArgs): SetYearActionType {\n    const transformedYear =\n        year === '' || isNaN(Number(year))\n            ? ''\n            : Number(year) < FIRST_AVAILABLE_YEAR\n            ? String(FIRST_AVAILABLE_YEAR)\n            : year;\n    if (success) {\n        return {\n            type: SET_YEAR + SUCCESS,\n            year: transformedYear,\n        };\n    }\n    return {\n        type: SET_YEAR,\n        year: transformedYear,\n    };\n}\n","import { all, put, select } from 'redux-saga/effects';\n\n// import getLaunchesAction from '../../../../actions/LaunchesActions/getLaunchesAction';\nimport getYearSelector from '../../../../selectors/LaunchesSelectors/getYearSelector';\nimport setYearAction from '../../../../actions/LaunchesActions/setYearAction';\n\nexport default function* submitLoginSaga({ year }: SetYearActionArgs) {\n    const currentYear = yield select(getYearSelector);\n    if (year !== currentYear)\n        yield all([\n            put(setYearAction({ success: true, year })),\n            // put(getLaunchesAction()),\n        ]);\n}\n","import { SET_YEAR } from './../../../../../constants/LaunchesConstants';\nimport setYearSaga from './../actions/setYearSaga';\nimport { takeLatest } from 'redux-saga/effects';\n\nexport default function* setYearWatcher() {\n    yield takeLatest(SET_YEAR as any, setYearSaga);\n}\n","import { fork } from 'redux-saga/effects';\nimport getLaunchesWatcher from './watchers/getLaunchesWatcher';\nimport setYearWatcher from './watchers/setYearWatcher';\n// import toggleOrderWatcher from './watchers/toggleOrderWatcher';\n\nexport default function* LaunchesSaga() {\n    yield fork(setYearWatcher);\n    yield fork(getLaunchesWatcher);\n    // yield fork(toggleOrderWatcher);\n}\n","import { compose } from \"redux\";\n\nexport default (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\n","import Color from 'color';\n\nconst black: Color = Color('#000000');\nconst dark: Color = Color('#545454');\nconst white: Color = Color('#FFFFFF');\nconst blue: Color = Color('#215184');\n\nconst getColor = (\n    color: Color,\n    opacity: number = 1,\n    darken: number = 0\n): string => {\n    return color\n        .fade(1 - opacity)\n        .darken(darken)\n        .string();\n};\n\nexport const BASE_SIZE: number = 16;\n\nexport const mediaQueries = {\n    phone: {\n        min: 25.625,\n        max: 25.5625,\n    },\n    largePhone: {\n        min: 35,\n        max: 34.9375,\n    },\n    tabletPortrait: {\n        min: 48,\n    },\n    tabletLandscape: {\n        min: 62,\n    },\n};\n\nconst ThemeConstants: Theme = {\n    colors: {\n        black: (opacity: number = 1, darken: number = 0) =>\n            getColor(black, opacity, darken),\n        dark: (opacity: number = 1, darken: number = 0) =>\n            getColor(dark, opacity, darken),\n        white: (opacity: number = 1, darken: number = 0) =>\n            getColor(white, opacity, darken),\n        primary: (opacity: number = 1, darken: number = 0) =>\n            getColor(blue, opacity, darken),\n    },\n    fontFamilies: {\n        primary: \"'Brandon Grotesque', Arial, Helvetica, sans-serif\",\n    },\n    sizes: {\n        base: BASE_SIZE,\n        mediaQueries,\n    },\n};\n\nexport default ThemeConstants;\n","import { FAILURE, SUCCESS } from '../../constants/BaseConstants';\nimport {\n    GET_LAUNCHES,\n    SET_ROW_HEIGHT,\n    SET_YEAR,\n    TOGGLE_ORDER,\n} from './../../constants/LaunchesConstants';\nimport { Transform, createTransform } from 'redux-persist';\n\nimport { BASE_SIZE } from '../../constants/ThemeConstants';\nimport { LAUNCHES_REDUCER_NAME } from '../../constants/StoreConstants';\nimport { ROW_HEIGHT } from '../../constants/LaunchesConstants';\nimport { ReducerActionType } from '../../../models/state/store';\nimport { TransformConfig } from 'redux-persist/es/createTransform';\n\nconst LARGE = (ROW_HEIGHT.LARGE + ROW_HEIGHT.MARGIN) * BASE_SIZE;\n\nexport const initialState: LaunchesStateType = {\n    items: [],\n    year: '',\n    order: 'desc',\n    isLoading: true,\n    rowHeight: LARGE,\n};\n\nexport const LaunchesTransform: Transform<\n    LaunchesStateType,\n    LaunchesStateType,\n    TransformConfig\n> = createTransform(\n    (inboundState: LaunchesStateType): LaunchesStateType => {\n        return { ...inboundState };\n    },\n    (outboundState: LaunchesStateType): LaunchesStateType => {\n        return {\n            ...outboundState,\n            items: initialState.items,\n            isLoading: initialState.isLoading,\n            rowHeight: initialState.rowHeight,\n        };\n    },\n    { whitelist: [LAUNCHES_REDUCER_NAME] }\n);\n\nconst LaunchesReducer = (\n    state: LaunchesStateType = initialState,\n    action: ReducerActionType\n) => {\n    switch (action.type) {\n        case GET_LAUNCHES:\n            return {\n                ...state,\n                isLoading: true,\n            };\n        case GET_LAUNCHES + FAILURE:\n            return {\n                ...state,\n                isLoading: false,\n            };\n        case GET_LAUNCHES + SUCCESS:\n            return {\n                ...state,\n                items: action.items,\n                isLoading: false,\n            };\n        case SET_YEAR + SUCCESS:\n            return {\n                ...state,\n                year: action.year,\n            };\n        case TOGGLE_ORDER:\n            return {\n                ...state,\n                order: state.order === 'asc' ? 'desc' : 'asc',\n            };\n        case SET_ROW_HEIGHT:\n            return {\n                ...state,\n                rowHeight: action.rowHeight,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default LaunchesReducer;\n","import { PersistKeyType } from '../../models/state/store';\n\nexport const LAUNCHES_REDUCER_NAME: LaunchesReducerName = 'launches';\nexport const PERSIST_KEY: PersistKeyType = 'xspace';\nexport const STORE_VERSION: number = 0;\n","import { PERSIST_KEY, STORE_VERSION } from './StoreConstants';\n\nimport { LaunchesTransform } from '../state/reducers/LaunchesReducer';\nimport { ReduxPersistConfigType } from '../../models/state/store';\nimport storage from 'redux-persist/lib/storage';\n\nexport const Config: ReduxPersistConfigType = {\n    version: STORE_VERSION,\n    key: PERSIST_KEY,\n    debug: process.env.NODE_ENV === 'development',\n    storage,\n    transforms: [LaunchesTransform],\n};\n","import { LAUNCHES_REDUCER_NAME } from '../../constants/StoreConstants';\nimport LaunchesReducer from './LaunchesReducer';\n\nexport default {\n    [LAUNCHES_REDUCER_NAME]: LaunchesReducer,\n};\n","import { Config } from '../../constants/StoreConfigConstants';\nimport { combineReducers } from 'redux';\nimport { persistReducer } from 'redux-persist';\nimport rootReducers from './../reducers';\n\nexport default function createReducer(asyncReducers: any) {\n    return persistReducer(\n        Config,\n        combineReducers({\n            ...rootReducers,\n            ...asyncReducers,\n        }) as any\n    );\n}\n","import { Persistor, persistStore } from 'redux-persist';\nimport { Reducer, applyMiddleware, createStore } from 'redux';\nimport createSagaMiddleware, { Saga } from 'redux-saga';\n\nimport LaunchesSaga from './../middlewares/sagas/LaunchesSaga';\nimport composeEnhancers from './composeEnhancers';\nimport createReducer from './createReducer';\nimport { fork } from 'redux-saga/effects';\nimport rootReducers from './../reducers';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nfunction configureStore(): { store: ReduxStore; persistor: Persistor } {\n    let store: ReduxStore = createStore(\n        createReducer({}),\n        undefined,\n        composeEnhancers(applyMiddleware(sagaMiddleware))\n    );\n    let persistor = persistStore(store, null, () => {\n        store.getState();\n    });\n\n    (store as any).asyncReducers = { ...rootReducers };\n    store.injectReducer = (key: string, asyncReducer: Reducer): void => {\n        if (!store.asyncReducers[key]) {\n            store.asyncReducers[key] = asyncReducer;\n            store.replaceReducer(createReducer(store.asyncReducers));\n            persistor.persist();\n        }\n    };\n\n    store.asyncSagas = { LaunchesSaga };\n    store.injectSaga = (key: string, asyncSaga: Saga<any[]>) => {\n        function* combinedSagas() {\n            yield fork(asyncSaga);\n        }\n        if (!store.asyncSagas[key]) {\n            store.asyncSagas[key] = asyncSaga;\n            sagaMiddleware.run(combinedSagas);\n            persistor.persist();\n        }\n    };\n\n    return { store, persistor };\n}\nconst { store, persistor } = configureStore();\n\nfunction* combinedSaga() {\n    yield fork(LaunchesSaga);\n}\n\nsagaMiddleware.run(combinedSaga);\n\nexport { store, persistor };\n","import Props from './props';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle<Props>`\n    html {\n        overflow-x: hidden;\n    }\n    body {\n        font-size: 16px;\n        font-family: ${({ theme }) => theme.fontFamilies.primary};\n        color: ${({ theme }) => theme.colors.dark(1)};\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n    * {\n        box-sizing: border-box;\n        -webkit-tap-highlight-color: transparent;\n        -webkit-touch-callout: none;\n    }\n    .ReactVirtualized__Grid.ReactVirtualized__List {\n        width: auto !important;\n        overflow: inherit !important;\n        outline: none;\n    }\n    .ReactVirtualized__Grid__innerScrollContainer {\n        max-width: inherit !important;\n        overflow: inherit !important;\n    }\n`;\n\nexport default GlobalStyle;\n","import styled, { css } from 'styled-components';\n\nimport Props from './props';\n\nconst SelectContainer = styled.ul<Props>`\n    position: absolute;\n    width: 15rem;\n    max-height: 20rem;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.colors.white(1)};\n    right: 0;\n    box-shadow: 0 0.125rem 0.3125rem ${({ theme }) => theme.colors.black(0.25)};\n    margin: 0;\n    padding: 0.5rem 0;\n    list-style: none;\n    text-align: left;\n    border-radius: 0.625rem;\n    transition: top 0.15s ease, opacity 0.15s ease;\n    z-index: 1;\n    @media (orientation: landscape) {\n        max-height: calc(100vh - 8rem);\n    }\n    ${({ visible }) =>\n        visible\n            ? css`\n                  top: 80%;\n                  opacity: 1;\n                  pointer-events: auto;\n              `\n            : css`\n                  top: 200%;\n                  opacity: 0;\n                  pointer-events: none;\n              `}\n`;\n\nexport default SelectContainer;\n","import SelectContainer from './../SelectContainer';\nimport styled from 'styled-components';\n\nconst FiltersContainer = styled.div`\n    padding-left: 1rem;\n    padding-right: 5rem;\n    margin-bottom: 0.8125rem;\n    position: sticky;\n    top: 1.5rem;\n    z-index: 1;\n    ${SelectContainer} {\n        right: auto;\n        left: 0;\n    }\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.largePhone.min}rem) {\n        text-align: right;\n        ${SelectContainer} {\n            right: 0;\n            left: auto;\n        }\n    }\n`;\n\nexport default FiltersContainer;\n","import styled, { Keyframes, css, keyframes } from 'styled-components';\n\nimport Props from './props';\n\nconst spinAnimation: Keyframes = keyframes`\n    from {transform:rotate(0deg);}\n    to {transform:rotate(360deg);}\n`;\n\nconst Icon = styled.i<Props>`\n    display: inline-block;\n    background-image: url('./../../../../assets/icon/icons.png');\n    background-position: top left;\n    background-repeat: no-repeat;\n    width: 0.875rem;\n    ${({ spin }) =>\n        spin &&\n        css`\n            animation: ${spinAnimation} 1s linear infinite;\n        `}\n    ${({ icon }) => {\n        switch (icon) {\n            case 'refresh':\n                return css`\n                    background-position: 0 0;\n                    height: 0.875rem;\n                `;\n            case 'select':\n                return css`\n                    background-position: 0 -0.9375rem;\n                    width: 0.625rem;\n                    height: 0.3125rem;\n                `;\n            case 'sort':\n                return css`\n                    background-position: 0 -1.3125rem;\n                    height: 1.125rem;\n                `;\n        }\n    }}\n    @media (-webkit-min-device-pixel-ratio: 2) {\n        & {\n            background-image: url('./../../../../assets/icon/icons@2x.png');\n            background-size: 0.875rem 2.5rem;\n        }\n    }\n    @media (-webkit-min-device-pixel-ratio: 3) {\n        & {\n            background-image: url('./../../../../assets/icon/icons@3x.png');\n            background-size: 0.875rem 2.5rem;\n        }\n    }\n`;\n\nexport default Icon;\n","import styled from 'styled-components';\n\nconst SelectWrapper = styled.div`\n    position: relative;\n    display: inline-block;\n`;\n\nexport default SelectWrapper;\n","import styled, { css } from 'styled-components';\n\nimport Props from './props';\n\nconst Span = styled.span<Props>`\n    font-size: 1rem;\n    ${({ hideSm }) =>\n        hideSm &&\n        css`\n            display: none;\n            @media (min-width: ${({ theme }) =>\n                    theme.sizes.mediaQueries.largePhone.min}rem) {\n                display: inline-block;\n            }\n        `}\n    ${({ showSm }) =>\n        showSm &&\n        css`\n            display: none;\n            @media (max-width: ${({ theme }) =>\n                    theme.sizes.mediaQueries.largePhone.max}rem) {\n                display: inline-block;\n            }\n        `}\n`;\n\nexport default Span;\n","import styled, { css } from 'styled-components';\n\nimport Icon from './../Icon';\nimport Props from './props';\nimport SelectWrapper from './../SelectWrapper';\nimport Span from './../Span';\n\nconst Button = styled.button<Props>`\n    background-color: ${({ theme }) => theme.colors.primary(1)};\n    border-width: 0;\n    margin: 0;\n    padding: 0 1rem;\n    line-height: 2.6875rem;\n    min-height: 2.6875rem;\n    cursor: pointer;\n    outline: 0;\n    display: inline-flex;\n    flex-direction: row;\n    align-items: center;\n    ${({ rounded }) =>\n        rounded &&\n        css`\n            border-radius: 1.34375rem 0 0 1.34375rem;\n        `}\n    ${({ animated }) =>\n        animated &&\n        css`\n            padding-left: 0.25rem;\n            transition: padding-left 0.3s ease;\n            ${Span} {\n                white-space: nowrap;\n                opacity: 0;\n                max-width: 0;\n                transition: opacity 0.3s ease, max-width 0.3s ease;\n            }\n            @media (hover: hover) {\n                &:hover {\n                    padding-left: 1rem;\n                    ${Span} {\n                        max-width: 10rem;\n                        opacity: 1;\n                    }\n                }\n            }\n        `}\n    &:active {\n        background-color: ${({ theme }) => theme.colors.primary(1, 0.2)};\n    }\n    &:disabled {\n        pointer-events: none;\n        background-color: ${({ theme }) => theme.colors.primary(0.4)};\n    }\n    ${Span} {\n        color: ${({ theme }) => theme.colors.white(1)};\n        font-weight: 700;\n    }\n    ${Icon} {\n        margin-left: 0.875rem;\n    }\n    & + & {\n        margin-left: 0.5625rem;\n    }\n    ${SelectWrapper} + & {\n        margin-left: 0.5625rem;\n    }\n`;\n\nexport default Button;\n","import React, { ReactElement } from 'react';\n\nimport Span from '../../atoms/Span';\nimport { Store } from '../../../../../models/state/store';\nimport getYearSelector from './../../../../state/selectors/LaunchesSelectors/getYearSelector';\nimport { useSelector } from 'react-redux';\n\n/**\n * Component the render the current selected year for filtering launches list\n * it returns null if no year is selected\n *\n * @returns {(ReactElement | null)}\n */\nconst SelectedYear: React.FC = (): ReactElement | null => {\n    const year = useSelector((state: Store) => getYearSelector(state));\n    if (!year) return null;\n    return <Span>: {year}</Span>;\n};\n\nexport default SelectedYear;\n","import { LAUNCHES_REDUCER_NAME } from '../../../constants/StoreConstants';\nimport { Store } from '../../../../models/state/store';\n\nexport default function isLoadingSelector(state: Store): boolean {\n    return state[LAUNCHES_REDUCER_NAME].isLoading;\n}\n","import React, { ReactElement } from 'react';\n\nimport Button from '../../atoms/Button';\nimport Icon from '../../atoms/Icon';\nimport Props from './props';\nimport SelectedYear from '../SelectedYear';\nimport Span from '../../atoms/Span';\nimport { Store } from '../../../../../models/state/store';\nimport isLoadingSelector from './../../../../state/selectors/LaunchesSelectors/isLoadingSelector';\nimport { useSelector } from 'react-redux';\n\n/**\n * Button that allows to filter launches by launch year\n *\n * @param {Props} {\n *     onClick,\n *     buttonRef,\n * }\n * @returns {ReactElement}\n */\nconst FilterButton: React.FC<Props> = ({\n    onClick,\n    buttonRef,\n}: Props): ReactElement => {\n    const isLoading = useSelector((state: Store) => isLoadingSelector(state));\n    return (\n        <Button disabled={isLoading} ref={buttonRef} onClick={onClick}>\n            <Span>\n                <Span hideSm={true}>Filter by</Span>\n                <Span\n                    hideSm={true}\n                    dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n                />\n                <Span>Year</Span>\n                <SelectedYear />\n            </Span>\n            <Icon icon='select' />\n        </Button>\n    );\n};\n\nexport default FilterButton;\n","import Props, { ItemProps, TriggerProps } from './props';\nimport React, { ReactElement, useMemo, useRef, useState } from 'react';\n\nimport SelectContainer from '../../atoms/SelectContainer';\nimport SelectWrapper from '../../atoms/SelectWrapper';\nimport useOutsideClick from '../../../../hooks/useOutsideClick';\n\n/**\n * Select component, trigger and item props are used, respectively, as the selecte trigger element and\n * component that renders every option item\n *\n * TriggerComponent has to implement the buttonRef prop, a property that will pass down the reference\n * ItemComponent has to implement onClick prop to allow effects when user choose of the options\n *\n * @param {Props} {\n *     trigger,\n *     item,\n *     options,\n *     onSelectOption,\n * }\n * @returns {ReactElement}\n */\nconst Select: React.FC<Props> = ({\n    trigger,\n    item,\n    options,\n    onSelectOption,\n}: Props): ReactElement => {\n    const TriggerComponent: React.FC<TriggerProps> = useMemo(() => trigger, [\n        trigger,\n    ]);\n    const ItemComponent: React.FC<ItemProps> = useMemo(() => item, [item]);\n    const [isOpen, setIsOpen] = useState(false);\n    const ref: React.MutableRefObject<HTMLButtonElement | undefined> = useRef();\n    useOutsideClick(ref, () => setIsOpen(false));\n    return (\n        <SelectWrapper data-testid='selectWrapper'>\n            <TriggerComponent\n                data-testid='selectTrigger'\n                buttonRef={ref}\n                onClick={() => {\n                    setIsOpen(!isOpen);\n                }}\n            />\n            <SelectContainer visible={isOpen} data-testid='selectContainer'>\n                {options.map((option, index) => {\n                    return (\n                        <ItemComponent\n                            data-testid={`${index}_selectItem`}\n                            key={option.optionKey}\n                            onClick={() => {\n                                onSelectOption(option);\n                            }}\n                            {...option}\n                        />\n                    );\n                })}\n            </SelectContainer>\n        </SelectWrapper>\n    );\n};\n\nexport default Select;\n","import { useEffect } from 'react';\n\n/**\n * React hook, it allowsto perform an action if the element clicked is not contained in the one referenced by the ref param\n *\n * @export\n * @param {(React.MutableRefObject<HTMLDivElement | HTMLButtonElement | undefined>)} ref\n * @param {Function} handler\n */\nexport default function useOutsideClick(\n    ref: React.MutableRefObject<HTMLDivElement | HTMLButtonElement | undefined>,\n    handler: (event: MouseEvent | TouchEvent | KeyboardEvent) => void\n): void {\n    useEffect(() => {\n        const clickListener = (event: MouseEvent | TouchEvent) => {\n            if (!ref.current || ref.current.contains(event.target as Node))\n                return;\n            handler(event);\n        };\n        const keyClickListener = (event: KeyboardEvent) => {\n            if (event.key === 'Escape') handler(event);\n        };\n        document.addEventListener('click', clickListener);\n        document.addEventListener('keyup', keyClickListener);\n        return () => {\n            document.removeEventListener('click', clickListener);\n            document.removeEventListener('keyup', keyClickListener);\n        };\n    }, [ref, handler]);\n}\n","import styled, { css } from 'styled-components';\n\nimport Props from './props';\n\nconst SelectItem = styled.li<Props>`\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n    @media (hover: hover) {\n        &:hover {\n            background-color: ${({ theme }) => theme.colors.primary(1)};\n            color: ${({ theme }) => theme.colors.white(1)};\n        }\n    }\n    ${({ selected }) =>\n        selected &&\n        css`\n            background-color: ${({ theme }) => theme.colors.primary(1)};\n            color: ${({ theme }) => theme.colors.white(1)};\n            font-weight: 900;\n        `}\n`;\n\nexport default SelectItem;\n","import { Store } from '../../../../models/state/store';\nimport createCachedSelector from 're-reselect';\nimport getYearSelector from './getYearSelector';\n\nexport default createCachedSelector(\n    [getYearSelector, (_: Store, year: string) => year],\n    (selectedYear, year): boolean => selectedYear === year\n)((_: Store, year: string) => year);\n","import React, { ReactElement } from 'react';\n\nimport Props from './props';\nimport SelectItem from './../../atoms/SelectItem';\nimport { Store } from '../../../../../models/state/store';\nimport isSelectedYearSelector from './../../../../state/selectors/LaunchesSelectors/isSelectedYearSelector';\nimport { useSelector } from 'react-redux';\n\n/**\n * Component that is used to render year item in Select component\n *\n * @param {Props} {\n *     label,\n *     optionKey,\n *     onClick,\n * }\n * @returns {ReactElement}\n */\nconst SelectItemYear: React.FC<Props> = ({\n    label,\n    optionKey,\n    onClick,\n}: Props): ReactElement => {\n    const isSelectedYear = useSelector((state: Store) =>\n        isSelectedYearSelector(state, optionKey)\n    );\n    return (\n        <SelectItem selected={isSelectedYear} onClick={onClick}>\n            {label}\n        </SelectItem>\n    );\n};\n\nexport default SelectItemYear;\n","import { ItemProps, Option, TriggerProps } from '../../molecules/Select/props';\nimport React, { ReactElement, useCallback } from 'react';\n\nimport { FIRST_AVAILABLE_YEAR } from '../../../../constants/LaunchesConstants';\nimport FilterButton from '../../molecules/FilterButton';\nimport Select from '../../molecules/Select';\nimport SelectItemYear from '../../molecules/SelectItemYear';\nimport arrayOfLength from '../../../../helpers/arrayOfLength';\nimport setYearAction from './../../../../state/actions/LaunchesActions/setYearAction';\nimport { useDispatch } from 'react-redux';\n\nconst options: Option[] = arrayOfLength(\n    new Date().getFullYear() - FIRST_AVAILABLE_YEAR + 1\n).map((e) => {\n    const label = String(new Date().getFullYear() - Number(e));\n    return {\n        optionKey: label,\n        label,\n    };\n});\n\n/**\n * Components that renders a select that contains all the year from now back to the year of first XSpace launch\n *\n * @returns {ReactElement}\n */\nconst SelectYear: React.FC = (): ReactElement => {\n    const dispatch = useDispatch();\n    const setYear = useCallback((year) => dispatch(setYearAction({ year })), [\n        dispatch,\n    ]);\n    return (\n        <Select\n            trigger={FilterButton as React.FC<TriggerProps>}\n            item={SelectItemYear as React.FC<ItemProps>}\n            options={[{ optionKey: '', label: 'None' }, ...options]}\n            onSelectOption={(option: Option) => setYear(option.optionKey)}\n        />\n    );\n};\n\nexport default SelectYear;\n","/**\n * Helper function, it return and array of string, its length is defined by the param length passed to the method\n *\n * @export\n * @param {number} length\n * @returns {string[]}\n */\nexport default function arrayOfLength(length: number): string[] {\n    return Object.keys(Array.from({ length }));\n}\n","import { LAUNCHES_REDUCER_NAME } from '../../../constants/StoreConstants';\nimport { Store } from '../../../../models/state/store';\n\nexport default function getOrderSelector(state: Store): Order {\n    return state[LAUNCHES_REDUCER_NAME].order;\n}\n","import { createSelector } from 'reselect';\nimport getOrderSelector from './getOrderSelector';\n\nexport default createSelector(\n    [getOrderSelector],\n    (order: Order): boolean => order === 'asc'\n);\n","import React, { ReactElement } from 'react';\n\nimport Span from '../../atoms/Span';\nimport { Store } from '../../../../../models/state/store';\nimport isAscendingOrderSelector from './../../../../state/selectors/LaunchesSelectors/isAscendingOrderSelector';\nimport { useSelector } from 'react-redux';\n\n/**\n * Component that render the corrent sorting method using short or long format, it depends on the device\n *\n * @returns {ReactElement}\n */\nconst SelectedOrder: React.FC = (): ReactElement => {\n    const isAsc = useSelector((state: Store) =>\n        isAscendingOrderSelector(state)\n    );\n    return (\n        <>\n            <Span hideSm={true}>{isAsc ? 'Ascending' : 'Descending'}</Span>\n            <Span showSm={true}>{isAsc ? 'Asc' : 'Desc'}</Span>\n        </>\n    );\n};\n\nexport default SelectedOrder;\n","import React, { ReactElement, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '../../atoms/Button';\nimport Icon from '../../atoms/Icon';\nimport SelectedOrder from '../SelectedOrder';\nimport Span from '../../atoms/Span';\nimport { Store } from '../../../../../models/state/store';\nimport isLoadingSelector from './../../../../state/selectors/LaunchesSelectors/isLoadingSelector';\nimport toggleOrderAction from './../../../../state/actions/LaunchesActions/toggleOrderAction';\n\n/**\n * Component that renders a button. It performs request to API for getting launches\n * It's used to refresh launches launches state\n *\n * @returns {ReactElement}\n */\nconst SortButton: React.FC = (): ReactElement => {\n    const dispatch = useDispatch();\n    const toggleOrder = useCallback(() => dispatch(toggleOrderAction()), [\n        dispatch,\n    ]);\n    const isLoading = useSelector((state: Store) => isLoadingSelector(state));\n    return (\n        <Button disabled={isLoading} onClick={() => toggleOrder()}>\n            <Span>\n                <Span hideSm={true}>Sort</Span>\n                <Span\n                    hideSm={true}\n                    dangerouslySetInnerHTML={{ __html: '&nbsp;' }}\n                />\n                <SelectedOrder />\n            </Span>\n            <Icon icon='sort' />\n        </Button>\n    );\n};\n\nexport default SortButton;\n","import { TOGGLE_ORDER } from '../../../constants/LaunchesConstants';\n\n/**\n * Redux action, it allows to store the sort action type to perform on launches list on client side\n *\n * @export\n * @returns {ActionType}\n */\nexport default function toggleOrderAction(): ActionType {\n    return {\n        type: TOGGLE_ORDER,\n    };\n}\n","import React, { ReactElement } from 'react';\n\nimport FiltersContainer from '../../atoms/FiltersContainer';\nimport SelectYear from '../../organisms/SelectYear';\nimport SortButton from '../../molecules/SortButton';\n\n/**\n * Components that renders all allows filters, year and sort button\n *\n * @returns {ReactElement}\n */\nconst Filters: React.FC = (): ReactElement => {\n    return (\n        <FiltersContainer>\n            <SelectYear />\n            <SortButton />\n        </FiltersContainer>\n    );\n};\n\nexport default Filters;\n","import styled from 'styled-components';\n\nconst Img = styled.img``;\n\nexport default Img;\n","import Img from './../Img';\nimport Span from './../Span';\nimport styled from 'styled-components';\n\nconst LogoContainer = styled.div`\n    ${Img} {\n        height: 1rem;\n        @media (min-width: ${({ theme }) =>\n                theme.sizes.mediaQueries.phone.min}rem) {\n            height: 1.375rem;\n        }\n    }\n    ${Span} {\n        font-size: 1rem;\n        position: relative;\n        left: -0.675rem;\n        @media (min-width: ${({ theme }) =>\n                theme.sizes.mediaQueries.phone.min}rem) {\n            font-size: 1.25rem;\n            left: -0.5rem;\n        }\n    }\n`;\n\nexport default LogoContainer;\n","import Button from './../../atoms/Button';\nimport LogoContainer from './../LogoContainer';\nimport styled from 'styled-components';\n\nconst HeaderContainer = styled.header`\n    height: 5.6875rem;\n    display: flex;\n    padding: 1.5rem 0 1.5rem 2.5625rem;\n    align-items: center;\n    z-index: 1;\n    ${LogoContainer} {\n        flex: 1;\n    }\n    ${Button} {\n        position: fixed;\n        right: 0;\n        top: 1.5rem;\n        z-index: 9999999;\n    }\n`;\n\nexport default HeaderContainer;\n","import React, { ReactElement } from 'react';\n\nimport Img from '../../atoms/Img';\nimport LogoContainer from '../../atoms/LogoContainer';\nimport Span from '../../atoms/Span';\n\n/**\n * Component the renders logo in the top let of the screen\n *\n * @returns {ReactElement}\n */\nconst Logo: React.FC = (): ReactElement => {\n    return (\n        <LogoContainer>\n            <Img src='./../../../../assets/spacex-logo.png' />\n            <Span>LAUNCHES</Span>\n        </LogoContainer>\n    );\n};\n\nexport default Logo;\n","import React, { ReactElement, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from '../../atoms/Button';\nimport Icon from '../../atoms/Icon';\nimport Span from '../../atoms/Span';\nimport { Store } from '../../../../../models/state/store';\nimport getLaunchesAction from './../../../../state/actions/LaunchesActions/getLaunchesAction';\nimport isLoadingSelector from './../../../../state/selectors/LaunchesSelectors/isLoadingSelector';\n\n/**\n * Component the renders reload button, it's fixed on the top and right of the screen,\n * it allow to request launches to the API.\n * Once request is launched the icon begin to spin and it stops once the request has returned (no matter the response)\n * On browser that supports hover feature, the button text is shown on hover\n *\n * @returns {ReactElement}\n */\nconst ReloadButton: React.FC = (): ReactElement => {\n    const dispatch = useDispatch();\n    const getLaunches = useCallback(() => dispatch(getLaunchesAction()), [\n        dispatch,\n    ]);\n    const isLoading = useSelector((state: Store) => isLoadingSelector(state));\n    return (\n        <Button\n            disabled={isLoading}\n            rounded={true}\n            animated={true}\n            onClick={getLaunches}\n        >\n            <Span>Reload Data</Span>\n            <Icon spin={isLoading} icon='refresh' />\n        </Button>\n    );\n};\n\nexport default ReloadButton;\n","import React, { ReactElement } from 'react';\n\nimport HeaderContainer from '../../atoms/HeaderContainer';\nimport Logo from '../../molecules/Logo';\nimport ReloadButton from '../../molecules/ReloadButton';\n\n/**\n * Component that contains logo and reload button\n *\n * @returns {ReactElement}\n */\nconst Header: React.FC = (): ReactElement => {\n    return (\n        <HeaderContainer>\n            <Logo />\n            <ReloadButton />\n        </HeaderContainer>\n    );\n};\n\nexport default Header;\n","import Img from './../Img';\nimport styled from 'styled-components';\n\nconst LaunchBackground = styled.div`\n    padding-right: 3.625rem;\n    padding-left: 2rem;\n    ${Img} {\n        width: 100%;\n    }\n`;\n\nexport default LaunchBackground;\n","import React, { ReactElement } from 'react';\n\nimport Img from '../../atoms/Img';\nimport LaunchBackground from '../../atoms/LaunchBackground';\nimport getImageSrcSetInfo from '../../../../helpers/getImageSrcSetInfo';\n\n/**\n * The components that renders the left side of the home page which contains an image\n * The image is hidden in small devices (tablets and phones)\n *\n * @returns {ReactElement}\n */\nconst HomeLaunchBackground: React.FC = (): ReactElement => {\n    const srcSetInfo = getImageSrcSetInfo(\n        './../../../../assets/img/launch-home',\n        '.png',\n        3\n    );\n    return (\n        <LaunchBackground>\n            <Img {...srcSetInfo} />\n        </LaunchBackground>\n    );\n};\n\nexport default HomeLaunchBackground;\n","interface SetInfo {\n    srcSet?: string;\n    src: string;\n}\n\n/**\n * Helper function that allows to construct image sources using path informations\n *\n * @export\n * @param {string} imagePath\n * @param {string} imageExt\n * @param {number} set\n * @returns {(SetInfo | {}})}\n */\nexport default function getImageSrcSetInfo(\n    imagePath: string,\n    imageExt: string,\n    set: number\n): SetInfo | {} {\n    if (!imagePath || !imageExt) return {};\n    if (!set || set < 2) {\n        return {\n            src: imagePath + imageExt,\n        };\n    }\n    const imageSet: string[] = Object.keys(\n        Array.from({ length: set })\n    ).map((e: string) => (e === '0' ? '' : `@${Number(e) + 1}x`));\n    return {\n        srcSet: imageSet\n            .map(\n                (e: string, i: number): string =>\n                    `${imagePath}${e}${imageExt} ${i / 2 + 1}x`\n            )\n            .join(', '),\n        src: imagePath + imageExt,\n    };\n}\n","import LaunchBackground from '../LaunchBackground';\nimport styled from 'styled-components';\n\nconst HomeListWrapper = styled.div`\n    display: block;\n    ${LaunchBackground} {\n        width: 44%;\n        padding-top: 1.625rem;\n        position: sticky;\n        top: 0;\n        display: none;\n        @media (min-width: ${({ theme }) =>\n                theme.sizes.mediaQueries.tabletPortrait.min}rem) {\n            display: block;\n            float: left;\n        }\n    }\n    .ReactVirtualized__Grid.ReactVirtualized__List {\n        width: 100% !important;\n    }\n`;\n\nexport default HomeListWrapper;\n","import styled from 'styled-components';\n\nconst H5 = styled.h5`\n    font-size: 1.25rem;\n    line-height: 1.25rem;\n    margin: 2rem 0 0 0;\n    text-align: center;\n    font-weight: 400;\n`;\n\nexport default H5;\n","import styled from 'styled-components';\n\nconst H3 = styled.h3`\n    font-weight: 500;\n    font-size: 2rem;\n    line-height: 2rem;\n    margin: 0;\n`;\n\nexport default H3;\n","import styled from 'styled-components';\n\nconst H4 = styled.h4`\n    font-weight: 700;\n    font-size: 1.5rem;\n    line-height: 1.5rem;\n    margin: 0;\n`;\n\nexport default H4;\n","import styled from 'styled-components';\n\nconst Card = styled.div`\n    border-radius: 0.625rem;\n    background-color: ${({ theme }) => theme.colors.white(1)};\n    box-shadow: 0 0.125rem 0.3125rem ${({ theme }) => theme.colors.black(0.25)};\n`;\n\nexport default Card;\n","import Card from './../Card';\nimport { ROW_HEIGHT } from '../../../../constants/LaunchesConstants';\nimport styled from 'styled-components';\n\nconst LaunchCard = styled(Card)`\n    height: ${ROW_HEIGHT.TINY}rem;\n    display: flex;\n    align-items: center;\n    margin-bottom: 0.3125rem;\n    &:last-child {\n        margin-bottom: 0;\n    }\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.phone.min}rem) {\n        height: ${ROW_HEIGHT.LARGE}rem;\n    }\n`;\n\nexport default LaunchCard;\n","import styled from 'styled-components';\n\nconst Rank = styled.span`\n    font-weight: 500;\n    font-size: 2.5rem;\n    line-height: 2.5rem;\n    display: inline-block;\n`;\n\nexport default Rank;\n","import styled, { css } from 'styled-components';\n\nimport H3 from '../H3';\nimport H4 from './../H4';\nimport Props from './props';\nimport Rank from '../Rank';\nimport Span from '../Span';\n\nconst Section = styled.div<Props>`\n    ${({ side }) => {\n        switch (side) {\n            case 'combined':\n                return css`\n                    display: flex;\n                    flex: 1;\n                    overflow: hidden;\n                    flex-direction: column;\n                    height: 100%;\n                    padding-left: 1rem;\n                    @media (min-width: ${({ theme }) =>\n                            theme.sizes.mediaQueries.phone.min}rem) {\n                        flex-direction: row;\n                        height: auto;\n                        padding-left: 0;\n                    }\n                `;\n            case 'left':\n                return css`\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    width: 100%;\n                    padding: 0;\n                    align-items: flex-start;\n                    display: flex;\n                    flex: 1;\n                    @media (min-width: ${({ theme }) =>\n                            theme.sizes.mediaQueries.phone.min}rem) {\n                        width: 8.25rem;\n                        padding: 0 0.5rem 0 2rem;\n                        flex: none;\n                        align-items: center;\n                    }\n                    ${Rank} {\n                        width: 100%;\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                        line-height: 1.4375rem;\n                        padding-top: 0.5rem;\n                        font-size: 1rem;\n                        @media (min-width: ${({ theme }) =>\n                                theme.sizes.mediaQueries.phone.min}rem) {\n                            font-size: 2.5rem;\n                            line-height: 2.5rem;\n                            padding-top: 0;\n                        }\n                    }\n                `;\n            case 'right':\n                return css`\n                    white-space: nowrap;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    padding: 0 1rem;\n                    text-align: right;\n                    height: 100%;\n                    display: flex;\n                    flex-direction: column;\n                    ${Span} {\n                        line-height: 1.4375rem;\n                        padding-top: 0.5rem;\n                        flex: 1;\n                    }\n                    ${H4} {\n                        line-height: 1.625rem;\n                        padding-bottom: 0.5rem;\n                    }\n                `;\n            case 'body':\n                return css`\n                    flex: none;\n                    white-space: nowrap;\n                    overflow: hidden;\n                    @media (min-width: ${({ theme }) =>\n                            theme.sizes.mediaQueries.phone.min}rem) {\n                        flex: 1;\n                    }\n                    ${H3} {\n                        width: 100%;\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                        font-size: 1.5rem;\n                        line-height: 1.625rem;\n                        padding-bottom: 0.5rem;\n                        @media (min-width: ${({ theme }) =>\n                                theme.sizes.mediaQueries.phone.min}rem) {\n                            line-height: 3rem;\n                            font-size: 2rem;\n                            padding-bottom: 0;\n                        }\n                    }\n                `;\n            default:\n                return css``;\n        }\n    }}\n`;\n\nexport default Section;\n","const suffixes: GenericObject = {\n    one: 'st',\n    two: 'nd',\n    few: 'rd',\n    other: 'th',\n};\n\n/**\n * Helper function, it transform a number into its ordinal version\n *\n * @export\n * @param {number} number\n * @returns {string}\n */\nexport default function getOrdinalNumber(\n    number: number,\n    forceFallback: boolean = false\n): string {\n    let suffix: string = '';\n    if (forceFallback || !Intl || (Intl && !Intl.PluralRules)) {\n        const fixedTh: number[] = [11, 12, 13];\n        if (fixedTh.includes(number)) {\n            suffix = 'th';\n        } else {\n            const lastNumber = String(number)[String(number).length - 1];\n            switch (lastNumber) {\n                case '1':\n                    suffix = 'st';\n                    break;\n                case '2':\n                    suffix = 'nd';\n                    break;\n                case '3':\n                    suffix = 'rd';\n                    break;\n                default:\n                    suffix = 'th';\n            }\n        }\n    } else {\n        const ordinalRules: Intl.PluralRules = new Intl.PluralRules('en', {\n            type: 'ordinal',\n        });\n        suffix = suffixes[ordinalRules.select(number)];\n    }\n    return number + suffix;\n}\n","const dateRules = new Intl.DateTimeFormat('en', {\n    month: 'short',\n});\n\n/**\n * Helper function, it transform date extracting month name short string\n *\n * @export\n * @param {Date} date\n * @returns {string}\n */\nexport default function getShortMonth(date: Date): string {\n    try {\n        return dateRules.format(date);\n    } catch (error) {\n        return '';\n    }\n}\n","import React, { ReactElement } from 'react';\n\nimport H3 from '../../atoms/H3';\nimport H4 from '../../atoms/H4';\nimport LaunchCard from '../../atoms/LaunchCard';\nimport Props from './props';\nimport Rank from '../../atoms/Rank';\nimport Section from '../../atoms/Section';\nimport Span from '../../atoms/Span';\nimport formatLaunchDate from '../../../../helpers/formatLaunchDate';\n\n/**\n * Component that render launch item inside a list\n *\n * @param {Props} {\n *     flightNumber,\n *     missionName,\n *     rocketName,\n *     date,\n * }\n * @returns {ReactElement}\n */\nconst Launch: React.FC<Props> = ({\n    flightNumber,\n    missionName,\n    rocketName,\n    date,\n}: Props): ReactElement => {\n    return (\n        <LaunchCard>\n            <Section side='combined'>\n                <Section side='left'>\n                    <Rank title={`#${flightNumber}`}>#{flightNumber}</Rank>\n                </Section>\n                <Section side='body'>\n                    <H3 title={missionName}>{missionName}</H3>\n                </Section>\n            </Section>\n            <Section side='right'>\n                <Span>{formatLaunchDate(date)}</Span>\n                <H4>{rocketName}</H4>\n            </Section>\n        </LaunchCard>\n    );\n};\n\nexport default Launch;\n","import getOrdinalNumber from './getOrdinalNumber';\nimport getShortMonth from './getShortMonth';\n\n/**\n * Helper function, transform unix timestamp into a string of type '{dayOrdinalFormat} {monthShortName} {fullYear}'\n *\n * @export\n * @param {number} unixDate\n * @returns {string}\n */\nexport default function formatLaunchDate(unixDate: number): string {\n    try {\n        const stringifiedTimestamp = String(unixDate);\n        const unixAllowedLengths: number[] = [10, 13];\n        if (!unixAllowedLengths.includes(stringifiedTimestamp.length)) {\n            throw new Error('Wrong unix timestamp format');\n        }\n        const formatUnixTimestamp =\n            stringifiedTimestamp.length === 10 ? unixDate * 1000 : unixDate;\n        const date: Date = new Date(formatUnixTimestamp);\n        const day: number = date.getDate();\n        const year: number = date.getFullYear();\n        const dateArray: [string, string, number] = [\n            getOrdinalNumber(day),\n            getShortMonth(date),\n            year,\n        ];\n        if (dateArray.includes('NaN')) throw new Error('Wrong date format');\n        return dateArray.join(' ');\n    } catch (error) {\n        return '';\n    }\n}\n","import styled, { keyframes } from 'styled-components';\n\nconst shimmer = keyframes`\n    0% {\n        background-position: -62.5rem 0;\n    }\n    100% {\n        background-position: 62.5rem 0;\n    }\n`;\n\nconst Shimmer = styled.div`\n    animation: ${shimmer} 2s infinite;\n    background: linear-gradient(to right, #eff1f3 4%, #e2e2e2 25%, #eff1f3 36%);\n    background-size: 62.5rem 100%;\n    border-radius: 0.3rem;\n`;\n\nexport default Shimmer;\n","import React, { ReactElement } from 'react';\nimport styled, { css } from 'styled-components';\n\nimport LaunchCard from '../../atoms/LaunchCard';\nimport Section from '../../atoms/Section';\nimport Shimmer from '../../atoms/Shimmer';\n\n/**\n * Component that renders shimmer elements, it replace Launch item list componen\n * when the list is empty and the application is requestin launches to the API\n *\n * @returns {ReactElement}\n */\nconst LaunchSkeleton: React.FC = (): ReactElement => {\n    return (\n        <LaunchCard>\n            <SectionSkeleton side='combined'>\n                <SectionSkeleton side='left'>\n                    <RankShimmer />\n                </SectionSkeleton>\n                <SectionSkeleton side='body'>\n                    <TitleShimmer />\n                </SectionSkeleton>\n            </SectionSkeleton>\n            <SectionSkeleton side='right'>\n                <DateShimmer />\n                <RocketShimmer />\n            </SectionSkeleton>\n        </LaunchCard>\n    );\n};\n\nexport default LaunchSkeleton;\n\nconst RankShimmer = styled(Shimmer)`\n    width: 15%;\n    height: 0.9rem;\n    margin-top: 0.8rem;\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.phone.min}rem) {\n        height: 1.875rem;\n        width: 75%;\n        margin-top: 0;\n    }\n`;\n\nconst TitleShimmer = styled(Shimmer)`\n    width: 75%;\n    height: 1.2rem;\n    margin-bottom: 0.8rem;\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.phone.min}rem) {\n        height: 1.875rem;\n        margin-bottom: 0;\n    }\n`;\n\nconst DateShimmer = styled(Shimmer)`\n    width: 85%;\n    height: 0.875rem;\n    position: absolute;\n    right: 1rem;\n    top: 0.8rem;\n`;\n\nconst RocketShimmer = styled(Shimmer)`\n    width: 65%;\n    height: 1.2rem;\n    position: absolute;\n    right: 1rem;\n    bottom: 0.8rem;\n`;\n\nconst SectionSkeleton = styled(Section)`\n    ${({ side }) => {\n        switch (side) {\n            case 'combined':\n                return css`\n                    height: 100%;\n                    @media (min-width: ${({ theme }) =>\n                            theme.sizes.mediaQueries.phone.min}rem) {\n                        height: 100%;\n                    }\n                `;\n            case 'left':\n                return css``;\n            case 'right':\n                return css`\n                    width: 8.3125rem;\n                    position: relative;\n                `;\n            case 'body':\n                return css`\n                    align-items: center;\n                    display: flex;\n                `;\n            default:\n                return css``;\n        }\n    }}\n`;\n","import styled from 'styled-components';\n\nconst ListWrapper = styled.div`\n    width: 100%;\n    padding-left: 1rem;\n    padding-right: 1rem;\n    display: inline-block;\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.tabletLandscape.min}rem) {\n        padding-right: 5rem;\n    }\n    @media (min-width: ${({ theme }) =>\n            theme.sizes.mediaQueries.tabletPortrait.min}rem) {\n        width: 56% !important;\n    }\n`;\n\nexport default ListWrapper;\n","import { createSelector } from 'reselect';\nimport getItemsSelector from './getItemsSelector';\nimport getOrderSelector from './getOrderSelector';\nimport getYearSelector from './getYearSelector';\n\nexport default createSelector(\n    [getItemsSelector, getOrderSelector, getYearSelector],\n    (items: Launch[], order: Order, year: string): Launch[] => {\n        let filteredItems = [...items];\n        if (year)\n            filteredItems = filteredItems.filter((e) => e.launch_year === year);\n        filteredItems.sort((a, b) =>\n            order === 'asc'\n                ? a.launch_date_unix - b.launch_date_unix\n                : b.launch_date_unix - a.launch_date_unix\n        );\n        return filteredItems;\n    }\n);\n","import { LAUNCHES_REDUCER_NAME } from '../../../constants/StoreConstants';\nimport { Store } from '../../../../models/state/store';\n\nexport default function getItemsSelector(state: Store): Launch[] {\n    return state[LAUNCHES_REDUCER_NAME].items;\n}\n","import { Store } from '../../../../models/state/store';\nimport createCachedSelector from 're-reselect';\nimport getFilteredItemsSelector from './getFilteredItemsSelector';\n\nexport default createCachedSelector(\n    [getFilteredItemsSelector, (_: Store, index: number) => index],\n    (items, index): Launch => items[index]\n)((_: Store, index: number) => index);\n","import { LAUNCHES_REDUCER_NAME } from '../../../constants/StoreConstants';\nimport { Store } from '../../../../models/state/store';\n\nexport default function getRowHeightSelector(state: Store): number {\n    return state[LAUNCHES_REDUCER_NAME].rowHeight;\n}\n","import { BASE_SIZE, mediaQueries } from './../constants/ThemeConstants';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ROW_HEIGHT } from '../constants/LaunchesConstants';\nimport { Store } from '../../models/state/store';\nimport getRowHeightSelector from '../state/selectors/LaunchesSelectors/getRowHeightSelector';\nimport setRowHeightAction from '../state/actions/LaunchesActions/setRowHeightAction';\n\nexport const LARGE = (ROW_HEIGHT.LARGE + ROW_HEIGHT.MARGIN) * BASE_SIZE;\nexport const TINY = (ROW_HEIGHT.TINY + ROW_HEIGHT.MARGIN) * BASE_SIZE;\n\n/**\n * React hook, it return the row item list height. It's used for virtualized launches list, it allows,\n * for each devices, to establish the right item position during scroll\n *\n * @export\n * @returns {number}\n */\nexport default function useListRowHeight(): number {\n    const dispatch = useDispatch();\n    const setRowHeight = useCallback(\n        (height: number) => dispatch(setRowHeightAction({ rowHeight: height })),\n        [dispatch]\n    );\n    const rowHeight = useSelector((state: Store) =>\n        getRowHeightSelector(state)\n    );\n\n    const onWidowResize = useCallback(\n        (e: Event) => {\n            const windowWidth = (e.currentTarget as Window).innerWidth;\n            if (\n                windowWidth >= mediaQueries.phone.min * BASE_SIZE &&\n                rowHeight !== LARGE\n            ) {\n                setRowHeight(LARGE);\n            }\n            if (\n                windowWidth < mediaQueries.phone.min * BASE_SIZE &&\n                rowHeight !== TINY\n            ) {\n                setRowHeight(TINY);\n            }\n        },\n        [rowHeight, setRowHeight]\n    );\n\n    useEffect(() => {\n        window.addEventListener('resize', onWidowResize);\n        window.dispatchEvent(new Event('resize'));\n        return () => {\n            window.removeEventListener('resize', onWidowResize);\n        };\n    }, [onWidowResize]);\n\n    useEffect(() => {\n        window.dispatchEvent(new Event('scroll'));\n    }, [rowHeight]);\n    return rowHeight;\n}\n","import 'react-virtualized/styles.css';\n\nimport { List, ListRowProps, WindowScroller } from 'react-virtualized';\nimport React, { ReactElement } from 'react';\n\nimport H5 from '../../atoms/H5';\nimport Launch from '../../molecules/Launch';\nimport LaunchSkeleton from '../../molecules/LaunchSkeleton';\nimport ListWrapper from '../../atoms/ListWrapper';\nimport { Store } from '../../../../../models/state/store';\nimport getLaunchItemSelector from '../../../../state/selectors/LaunchesSelectors/getLaunchItemSelector';\nimport getRowHeightSelector from '../../../../state/selectors/LaunchesSelectors/getRowHeightSelector';\nimport useLaunchesList from '../../../../hooks/useLaunchesList';\nimport useListRowHeight from '../../../../hooks/useListRowHeight';\nimport { useSelector } from 'react-redux';\n\ninterface OptionsProps {\n    rowHeight: number;\n    launch: Launch;\n}\n\nconst RowRenderer = (props: ListRowProps) => {\n    const rowHeight = useSelector((state: Store) =>\n        getRowHeightSelector(state)\n    );\n    const launch = useSelector((state: Store) =>\n        getLaunchItemSelector(state, props.index)\n    );\n    return (\n        <div\n            key={launch.flight_number}\n            style={{\n                ...props.style,\n                height: `${rowHeight}px`,\n                width: '100%',\n            }}\n        >\n            <Launch\n                flightNumber={launch.flight_number}\n                missionName={launch.mission_name}\n                date={launch.launch_date_unix}\n                rocketName={\n                    launch.rocket && launch.rocket.rocket_name\n                        ? launch.rocket.rocket_name\n                        : ''\n                }\n            />\n        </div>\n    );\n};\n\n/**\n * Component that renders a message if the launches list is empty and there's no pending request to API\n * It renders a list of Skeleton components if the launches list is empty but there's a pending request\n * Although it renders a virtualized list. Even if the list is large, just the item visible in viewport\n * are rendered\n *\n * @returns {ReactElement}\n */\nconst LaunchesList: React.FC = (): ReactElement => {\n    const { launches, isLoading } = useLaunchesList();\n    const rowHeight = useListRowHeight();\n    return (\n        <ListWrapper>\n            {isLoading && (!launches || launches.length === 0) ? (\n                Object.keys(Array.from({ length: 12 })).map((e) => (\n                    <LaunchSkeleton key={e} />\n                ))\n            ) : !launches || launches.length === 0 ? (\n                <H5>No launches found</H5>\n            ) : (\n                <WindowScroller>\n                    {({\n                        height,\n                        isScrolling,\n                        registerChild,\n                        onChildScroll,\n                        scrollTop,\n                    }) => (\n                        <div ref={registerChild}>\n                            <List\n                                autoHeight\n                                height={height}\n                                isScrolling={isScrolling}\n                                onScroll={onChildScroll}\n                                scrollTop={scrollTop}\n                                width={300}\n                                rowCount={launches.length}\n                                rowHeight={rowHeight}\n                                rowRenderer={(props: ListRowProps) => (\n                                    <RowRenderer {...props} />\n                                )}\n                            />\n                        </div>\n                    )}\n                </WindowScroller>\n            )}\n        </ListWrapper>\n    );\n};\n\nexport default LaunchesList;\n","import { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Store } from '../../models/state/store';\nimport getFilteredItemsSelector from './../state/selectors/LaunchesSelectors/getFilteredItemsSelector';\nimport getLaunchesAction from './../state/actions/LaunchesActions/getLaunchesAction';\nimport isLoadingSelector from '../state/selectors/LaunchesSelectors/isLoadingSelector';\n\ninterface HookResponse {\n    launches: Launch[];\n    isLoading: boolean;\n}\n\n/**\n * React hook for sending request for launches. The request is performed just on component mount\n * It return the launches sorted list, filtered by year and a param that indicates if a request is in pending\n *\n * @export\n * @returns {HookResponse}\n */\nexport default function useLaunchesList(): HookResponse {\n    const dispatch = useDispatch();\n    const getLaunches = useCallback(() => dispatch(getLaunchesAction()), [\n        dispatch,\n    ]);\n    useEffect(() => {\n        getLaunches();\n    }, [getLaunches]);\n    const launches = useSelector((state: Store) =>\n        getFilteredItemsSelector(state)\n    );\n    useEffect(() => {\n        window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    }, [launches]);\n    const isLoading = useSelector((state: Store) => isLoadingSelector(state));\n    return { launches, isLoading };\n}\n","import { SET_ROW_HEIGHT } from '../../../constants/LaunchesConstants';\n\n/**\n * Redux action for storing right row height on launch list, it's for virtualized list\n *\n * @export\n * @param {SetRowHeightActionArgs} {\n *     rowHeight,\n * }\n * @returns {SetRowHeightActionType}\n */\nexport default function setRowHeightAction({\n    rowHeight,\n}: SetRowHeightActionArgs): SetRowHeightActionType {\n    return {\n        type: SET_ROW_HEIGHT,\n        rowHeight: rowHeight < 0 ? 0 : rowHeight,\n    };\n}\n","import React, { ReactElement } from 'react';\n\nimport HomeLaunchBackground from '../../molecules/HomeLaunchBackground';\nimport HomeListWrapper from '../../atoms/HomeListWrapper';\nimport LaunchesList from '../../organisms/LaunchesList';\n\n/**\n * It renders the main part of the screen in home page, right below the filters element\n * It contains the launches list and an image\n *\n * @returns {ReactElement}\n */\nconst HomeList: React.FC = (): ReactElement => {\n    return (\n        <HomeListWrapper>\n            <HomeLaunchBackground />\n            <LaunchesList />\n        </HomeListWrapper>\n    );\n};\n\nexport default HomeList;\n","import React, { ReactElement } from 'react';\n\nimport Filters from '../../organisms/Filters';\nimport Header from '../../organisms/Header';\nimport HomeList from '../../templates/HomeList';\n\n/**\n * Home page\n *\n * @returns {ReactElement}\n */\nconst Home: React.FC = (): ReactElement => {\n    return (\n        <>\n            <Header />\n            <Filters />\n            <HomeList />\n        </>\n    );\n};\n\nexport default Home;\n","import React, { ReactElement } from 'react';\nimport { persistor, store } from './state/store';\n\nimport GlobalStyle from './components/containers/GlobalStyle';\nimport Home from './components/layout/pages/Home';\nimport { Normalize } from 'styled-normalize';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport theme from './constants/ThemeConstants';\n\n/**\n * First rendered component. It contains Store and Theme providers,\n * components strictly related to application global style and\n * main component Home\n *\n * @returns {ReactElement}\n */\nconst App: React.FC = (): ReactElement => {\n    return (\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <ThemeProvider theme={theme}>\n                    <Normalize />\n                    <GlobalStyle />\n                    <Home />\n                </ThemeProvider>\n            </PersistGate>\n        </Provider>\n    );\n};\n\nexport default App;\n","import './polyfill';\nimport './assets/css/font.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}